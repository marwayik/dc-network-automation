Following this guide for starting with netconf automation of csr1000v
https://networkop.co.uk/blog/2017/01/25/netconf-intro/
!
Build my environment : 
1 # Install GIT
1.1   sudo apt-get install git
1.2   upload public-ssh key to git
1.3   git clone git@github.com:url xxx  # clone with ssh, not with https
1.4   configure git
1.5.1 git config --global user.name "your_git_name"
1.5.2 git config --global user.email "my mail"
1.5.3 git config --list
!
2 # Setup development environment (Ubuntu 16.04) for Python / Netconf / YANG
2.1  varius packages instalation
	 sudo apt-get install python3-pip
	 sudo apt-get install openssl
	 sudo pip3 install pipenv 
2.2  Setup  environment for netconf-intro project
	 ""following https://networkop.co.uk/blog/2017/01/25/netconf-intro/ ""
	 mkdir netconf-intro
	 pipenv --three
	 pipenv install ncclient pyang pyangbind openssl cryptography==2.5 
	 pipenv install -d ipython
3 # Device configuration workflow
	NX-OS guide https://www.cisco.com/c/en/us/td/docs/switches/datacenter/nexus9000/sw/92x/programmability/guide/b-cisco-nexus-9000-series-nx-os-programmability-guide-92x/b-cisco-nexus-9000-series-nx-os-programmability-guide-92x_chapter_011010.html

from ncclient import manager
m = manager.connect(host='192.168.0.53', port=830, username='admin', password='', device_params={'name': 'csr'})
print m.server_capabilities
	 

